#!/bin/bash

echo "----------------------------"
echo "| SSL Client Cert Generator |"
echo "----------------------------"
echo

export CA_KEY=${CA_KEY-"ca-key.pem"}
export CA_CERT_PEM=${CA_CERT_PEM-"ca.pem"}
export CA_CERT_CRT=${CA_CERT_CRT-"ca.crt"}
export CA_CRT_FORMAT=${CA_CRT_FORMAT-"pem"}
export CA_SUBJECT=${CA_SUBJECT:-"test-ca"}
export CA_EXPIRE=${CA_EXPIRE:-"60"}

export SSL_CONFIG=${SSL_CONFIG:-"openssl.cnf"}
export CLIENT_KEY=${CLIENT_KEY:-"client-key.pem"}
export CLIENT_CSR=${CLIENT_CSR:-"client-csr.csr"}
export CLIENT_CERT=${CLIENT_CERT:-"client-cert.pem"}
export CLIENT_P12=${CLIENT_P12:-"client-cert.p12"}
export CLIENT_KEY_SIZE=${CLIENT_KEY_SIZE:-"2048"}
export CLIENT_EXPIRE=${CLIENT_EXPIRE:-"60"}
export CLIENT_PASSWD=${CLIENT_PASSWD:-"password"}

export CLIENT_SUBJECT=${CLIENT_SUBJECT:-"example.com"}
export CLIENT_DNS=${CLIENT_DNS}
export CLIENT_IP=${CLIENT_IP}

echo "--> Certificate Authority"

if [[ -e ./${CA_KEY} ]]; then
    echo "====> Using existing CA Key ${CA_KEY}"
else
    echo "====> Generating new CA key ${CA_KEY}"
    openssl genrsa -out ${CA_KEY} 2048
fi

if [[ -e ./${CA_CERT_PEM} ]]; then
    echo "====> Using existing CA Certificate ${CA_CERT_PEM}"
else
    echo "====> Generating new CA Certificate ${CA_CERT_PEM}"
    openssl req -x509 -new -nodes -key ${CA_KEY} -days ${CA_EXPIRE} -out ${CA_CERT_PEM} -subj "/CN=${CA_SUBJECT}"  || exit 1
fi

echo "====> Generating new config file ${SSL_CONFIG}"
cat > ${SSL_CONFIG} <<EOM
[req]
req_extensions = v3_req
distinguished_name = req_distinguished_name
[req_distinguished_name]
[ v3_req ]
basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, serverAuth
EOM

if [[ -n ${CLIENT_DNS} || -n ${CLIENT_IP} ]]; then
    cat >> ${SSL_CONFIG} <<EOM
subjectAltName = @alt_names
[alt_names]
EOM

    IFS=","
    dns=(${CLIENT_DNS})
    dns+=(${CLIENT_SUBJECT})
    for i in "${!dns[@]}"; do
      echo DNS.$((i+1)) = ${dns[$i]} >> ${SSL_CONFIG}
    done

    if [[ -n ${CLIENT_IP} ]]; then
        ip=(${CLIENT_IP})
        for i in "${!ip[@]}"; do
          echo IP.$((i+1)) = ${ip[$i]} >> ${SSL_CONFIG}
        done
    fi
fi

echo "====> Generating new client SSL KEY ${CLIENT_KEY}"
openssl genrsa -out ${CLIENT_KEY} ${CLIENT_KEY_SIZE}  || exit 1

echo "====> Generating new client SSL CSR ${CLIENT_CSR}"
openssl req -new -key ${CLIENT_KEY} -out ${CLIENT_CSR} -subj "/CN=${CLIENT_SUBJECT}" -config ${SSL_CONFIG}  || exit 1

echo "====> Generating new client SSL CERT ${CLIENT_CERT}"
openssl x509 -req -in ${CLIENT_CSR} -CA ${CA_CERT_PEM} -CAkey ${CA_KEY} -CAcreateserial -out ${CLIENT_CERT} \
    -days ${CLIENT_EXPIRE} -extensions v3_req -extfile ${SSL_CONFIG}  || exit 1

echo "====> Exporting client SSL P12 ${CLIENT_P12}"
openssl pkcs12 -export -in ${CLIENT_CERT} -inkey ${CLIENT_KEY} -out ${CLIENT_P12} -password pass:${CLIENT_PASSWD} > /dev/null || exit 1

echo
echo "----------------------------"
echo "|         Finished!        |"
echo "----------------------------"
echo